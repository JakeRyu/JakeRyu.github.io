{"data":{"allMarkdownRemark":{"totalCount":13,"edges":[{"node":{"fields":{"slug":"/unit-testing-react-hooks/"},"id":"de16a2ce-8886-50e6-84da-ea18571a6e99","frontmatter":{"title":"Unit Testing React Hooks","image":"https://source.unsplash.com/150x150/?test","keywords":"test","date":"2023-02-24"},"excerpt":"React hooks were introduced in version 16.8 as a way to use stateful logic in functional components. Since then, they have become an…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-4/"},"id":"255b6a7a-5016-5821-abbc-66c39e95ac07","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (4)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"2020-06-03"},"excerpt":"지난편에 이어서 애플리케이션 레이어를 완성할 것이다. 조회 요청을 다루면서 DTO(Data Transfer Object…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-3/"},"id":"486e1529-2c3e-50d1-ac4d-0431b792aaac","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (3)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"2020-05-14"},"excerpt":"지금까지 Payment 라는 도메인 엔티티와 두개의 Value Object(CardNumber, CardExpiryDate…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-2/"},"id":"461253c4-faf7-5c93-99bd-c2ca44c155d1","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (2)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"2020-05-08"},"excerpt":"…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-1/"},"id":"bdaad08a-ffa8-5e76-8935-72c4b2d01a2f","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (1)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"2020-05-02"},"excerpt":"아키텍쳐를 두고 고민하는 것이 비단 아키텍트만의 고민은 아닐 것이다. 모든 개발자들이 자신의 커리어를 쌓으면서 계속 마주하게 되는 문제중의 하나가 좋은 아키텍쳐에 대한 목마름이다. 운이 좋게도 나는…"}},{"node":{"fields":{"slug":"/검색-정렬/"},"id":"7438a5d4-dd16-555f-8a75-5f6669899681","frontmatter":{"title":"클린 아키텍쳐에서 검색과 정렬","image":"https://picsum.photos/150/150?search","keywords":"sorting","date":"2020-04-30"},"excerpt":"비지니스 애플리케이션을 작성할 때 상당부분을 CRUD 작업에 할애한다. 도메인 엔티티만 바꿔가며 반복적으로 비슷한 구현을 하다보면 좋은 패턴을 적용해야겠다는 생각을 하게된다. 검색과 정렬도 CRUD…"}},{"node":{"fields":{"slug":"/언제까지-비주얼스튜디오만-쓸거야/"},"id":"c786ebc9-325d-52df-a781-37ae48cc1005","frontmatter":{"title":"언제까지 비주얼스튜디오만 쓸거야?","image":"https://source.unsplash.com/150x150/?code","keywords":"programming","date":"2020-04-11"},"excerpt":"…"}},{"node":{"fields":{"slug":"/swagger-다중문서/"},"id":"e4958a5e-b711-52da-899c-24872c30e93e","frontmatter":{"title":"Swagger를 이용한 API 문서관리","image":"https://source.unsplash.com/150x150/?document","keywords":"document","date":"2020-04-08"},"excerpt":"Swagger는 마이크로소프트 공식 문서에도 등장하는 API 문서관리 도구이다. 잘 정리된 문서는 퍼블릭 서비스(OpenAPI) 뿐만 아니라 내부 사용자에게도 큰 도움이 되기에 API를 운영한다면 반드시 도입하기를 추천한다. Swagger…"}},{"node":{"fields":{"slug":"/api-버전관리/"},"id":"332826ce-35d7-5806-9a6e-dcd6e9506bfc","frontmatter":{"title":"API 버전관리","image":"https://picsum.photos/150/150?contract","keywords":"version","date":"2020-04-05"},"excerpt":"API를 관리하면서 기능 향상이나 추가는 일상적인 요구사항이다. 이때, 기존 호환성을 유지해야 한다면 각기 다른 버전의 API를 제공할 필요가 있다. 마이크로소프트는 Microsoft.AspNetCore.Mvc.Versioning 패키지를 통해 ASP…"}},{"node":{"fields":{"slug":"/api-versioning/"},"id":"e57fbff2-7942-5b12-b451-e557fa75d2af","frontmatter":{"title":"API Versioning","image":"https://picsum.photos/150/150?contract","keywords":"version","date":"2020-04-03"},"excerpt":"Microsoft has provided a Nuget package called Microsoft.AspNetCore.Mvc.Versioning to ease the process versioning .Net Core REST APIs. With…"}},{"node":{"fields":{"slug":"/제네릭-리포지토리/"},"id":"b1f01ce7-8a76-53fc-8ac3-09b7cfae1c15","frontmatter":{"title":"제네릭 리포지토리","image":"https://source.unsplash.com/150x150/?database","keywords":"generic","date":"2020-03-15"},"excerpt":"이전 글, 리포지토리 패턴과 엔티티 프레임워크 코어를 읽고 리포지토리 패턴을 구현하기로 결정했다면 이번 글에서는 엔티티 프레임워크 코어를 활용해서 손쉽게 구현하는 방법을 알아본다. (리포지토리는 정보 저장을 추상화할 때 사용하는 것으로 API…"}},{"node":{"fields":{"slug":"/리포지토리-패턴/"},"id":"5167be63-bd62-5ac3-851c-0774116c5e7e","frontmatter":{"title":"리포지토리 패턴과 엔티티 프레임워크 코어","image":"https://source.unsplash.com/150x150/?pattern","keywords":"pattern","date":"2020-03-08"},"excerpt":"리포지토리, 유닛오브워크 패턴은 디자인 패턴중에서 아마 가장 많이 알려진 패턴이 아닐까 생각한다. 애플리케이션을 만들면서 데이터를 다루는 일은 빠질 수 없는 요소인데 ORM…"}},{"node":{"fields":{"slug":"/repository-pattern/"},"id":"0abc3e5b-252c-5649-abcc-e00c8ed7efbf","frontmatter":{"title":"Get the repository pattern right","image":"https://source.unsplash.com/150x150/?database","keywords":"database","date":"2020-03-07"},"excerpt":"The well-known patterns, repository and unit of work patterns lie at the heart of the persistence layer. A repository usually provides CRUD…"}}]}}}
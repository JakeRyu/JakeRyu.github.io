{"data":{"allMarkdownRemark":{"totalCount":12,"edges":[{"node":{"fields":{"slug":"/클린아키텍쳐-4/"},"id":"2a8280ee-45ca-506c-b67d-1322b7222478","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (4)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"June 2020"},"excerpt":"지난편에 이어서 애플리케이션 레이어를 완성할 것이다. 조회 요청을 다루면서 DTO(Data Transfer Object…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-3/"},"id":"f1bdc577-66a9-5b45-8946-0938a7707371","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (3)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"May 2020"},"excerpt":"지금까지 Payment 라는 도메인 엔티티와 두개의 Value Object(CardNumber, CardExpiryDate…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-2/"},"id":"a8f4e61c-1877-5aef-b7a8-68a1b279d52e","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (2)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"May 2020"},"excerpt":"…"}},{"node":{"fields":{"slug":"/클린아키텍쳐-1/"},"id":"b3106886-71da-53e0-9dd2-711f927a20ed","frontmatter":{"title":"ASP.NET Core로 구현하는 클린 아키텍쳐 (1)","image":"https://source.unsplash.com/150x150/?architecture","keywords":"architecture","date":"May 2020"},"excerpt":"아키텍쳐를 두고 고민하는 것이 비단 아키텍트만의 고민은 아닐 것이다. 모든 개발자들이 자신의 커리어를 쌓으면서 계속 마주하게 되는 문제중의 하나가 좋은 아키텍쳐에 대한 목마름이다. 운이 좋게도 나는…"}},{"node":{"fields":{"slug":"/검색-정렬/"},"id":"80ff38f6-5116-5e8d-a073-70c798f341e7","frontmatter":{"title":"클린 아키텍쳐에서 검색과 정렬","image":"https://source.unsplash.com/150x150/?search","keywords":"search","date":"April 2020"},"excerpt":"비지니스 애플리케이션을 작성할 때 상당부분을 CRUD 작업에 할애한다. 도메인 엔티티만 바꿔가며 반복적으로 비슷한 구현을 하다보면 좋은 패턴을 적용해야겠다는 생각을 하게된다. 검색과 정렬도 CRUD…"}},{"node":{"fields":{"slug":"/언제까지-비주얼스튜디오만-쓸거야/"},"id":"f4636191-96b2-564a-a4ed-ce996634974f","frontmatter":{"title":"언제까지 비주얼스튜디오만 쓸거야?","image":"https://source.unsplash.com/150x150/?visualstudio","keywords":"visualstudio","date":"April 2020"},"excerpt":"…"}},{"node":{"fields":{"slug":"/swagger-다중문서/"},"id":"5fff72bb-112e-50d5-acff-64a1f64595e4","frontmatter":{"title":"Swagger를 이용한 API 문서관리","image":"https://source.unsplash.com/150x150/?swagger","keywords":"swagger","date":"April 2020"},"excerpt":"Swagger는 마이크로소프트 공식 문서에도 등장하는 API 문서관리 도구이다. 잘 정리된 문서는 퍼블릭 서비스(OpenAPI) 뿐만 아니라 내부 사용자에게도 큰 도움이 되기에 API를 운영한다면 반드시 도입하기를 추천한다. Swagger…"}},{"node":{"fields":{"slug":"/api-버전관리/"},"id":"6a1767b8-47f5-5856-8b14-01482fedf3f1","frontmatter":{"title":"API 버전관리","image":"https://picsum.photos/150/150","keywords":"api","date":"April 2020"},"excerpt":"API를 관리하면서 기능 향상이나 추가는 일상적인 요구사항이다. 이때, 기존 호환성을 유지해야 한다면 각기 다른 버전의 API를 제공할 필요가 있다. 마이크로소프트는 Microsoft.AspNetCore.Mvc.Versioning 패키지를 통해 ASP…"}},{"node":{"fields":{"slug":"/api-versioning/"},"id":"7bee1526-1ab3-5bf0-951a-9d2949e1f9e5","frontmatter":{"title":"API Versioning","image":"https://picsum.photos/150/150","keywords":"api","date":"April 2020"},"excerpt":"Microsoft has provided a Nuget package called Microsoft.AspNetCore.Mvc.Versioning to ease the process versioning .Net Core REST APIs. With…"}},{"node":{"fields":{"slug":"/제네릭-리포지토리/"},"id":"ebdbbcbe-0570-550e-94b8-290945ee3293","frontmatter":{"title":"제네릭 리포지토리","image":"https://source.unsplash.com/150x150/?database","keywords":"repository","date":"March 2020"},"excerpt":"이전 글, 리포지토리 패턴과 엔티티 프레임워크 코어를 읽고 리포지토리 패턴을 구현하기로 결정했다면 이번 글에서는 엔티티 프레임워크 코어를 활용해서 손쉽게 구현하는 방법을 알아본다. (리포지토리는 정보 저장을 추상화할 때 사용하는 것으로 API…"}},{"node":{"fields":{"slug":"/리포지토리-패턴/"},"id":"f85b29fa-98cd-5686-bc88-2e997829e07e","frontmatter":{"title":"리포지토리 패턴과 엔티티 프레임워크 코어","image":"https://source.unsplash.com/150x150/?database","keywords":"database","date":"March 2020"},"excerpt":"리포지토리, 유닛오브워크 패턴은 디자인 패턴중에서 아마 가장 많이 알려진 패턴이 아닐까 생각한다. 애플리케이션을 만들면서 데이터를 다루는 일은 빠질 수 없는 요소인데 ORM…"}},{"node":{"fields":{"slug":"/repository-pattern/"},"id":"de2bc973-d651-51e4-8378-3ad7e3ba72f8","frontmatter":{"title":"Get the repository pattern right","image":"https://source.unsplash.com/150x150/?database","keywords":"database","date":"March 2020"},"excerpt":"The well-known patterns, repository and unit of work patterns lie at the heart of the persistence layer. A repository usually provides CRUD…"}}]}}}